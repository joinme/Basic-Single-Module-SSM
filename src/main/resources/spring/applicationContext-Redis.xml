<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
    <!-- Redis配置 -->
    <context:property-placeholder location="classpath:properties/config.properties"/>
    
    <!-- Jedis配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    	<property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>
    <!--
    <bean id="jedisPool" class="redis.clients.jedis.JedisSentinelPool" scope="singleton">
    	<constructor-arg index="0" value="error"/>
    	<constructor-arg index="1">
    		<set>
    			<value>${redis.sentinel.host1}</value>
    			<value>${redis.sentinel.host2}</value>
    			<value>${redis.sentinel.host3}</value>
    		</set>
    	</constructor-arg>
    	<constructor-arg index="2" ref="jedisPoolConfig"/>
    	<constructor-arg index="3" value="${redis.replication.timeOut}"/>
    	<constructor-arg index="4" value="ssmRedis"/>
    </bean>
    -->
    <!-- final GenericObjectPoolConfig poolConfig, final String host, int port, int timeout, final String password -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" scope="singleton">
        <!--
        <constructor-arg name="poolConfig" value="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.host}"/>
        <constructor-arg name="port" value="${redis.port}"/>
        <constructor-arg name="timeout" value="${redis.replication.timeOut}"/>
        <constructor-arg name="password" value="ssmRedis"/>
        -->
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <constructor-arg index="3" value="${redis.replication.timeOut}"/>
        <constructor-arg index="4" value="ssmRedis"/>
    </bean>
    
    
    <bean id="redisUtil" class="com.youmeek.common.utils.RedisUtil"/>
    
    <!-- 连接池 -->
<!--     <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton"> -->
<!--         <constructor-arg index="0" ref="jedisPoolConfig" /> -->
<!--         <constructor-arg index="1"> -->
<!--             <list> -->
<!--             	多个机器时，逐一添加 -->
<!--                 <bean class="redis.clients.jedis.JedisShardInfo"> -->
<!--                     <constructor-arg name="host" value="${redis.replication.host1}" /> -->
<!--                     <constructor-arg name="port" value="${redis.port}" /> -->
<!--                     <constructor-arg name="timeout" value="${redis.replication.timeOut}" /> -->
<!--                     <constructor-arg name="weight" value="1" /> -->
<!--                 </bean> -->
<!--                 <bean class="redis.clients.jedis.JedisShardInfo"> -->
<!--                     <constructor-arg name="host" value="${redis.replication.host2}" /> -->
<!--                     <constructor-arg name="port" value="${redis.port}" /> -->
<!--                     <constructor-arg name="timeout" value="${redis.replication.timeOut}" /> -->
<!--                     <constructor-arg name="weight" value="1" /> -->
<!--                 </bean> -->
<!--             </list> -->
<!--         </constructor-arg> -->
<!--     </bean> -->
</beans>